{"remainingRequest":"E:\\vuepress-vdoing-blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!E:\\vuepress-vdoing-blog\\node_modules\\vuepress-theme-vdoing\\util\\postData.js","dependencies":[{"path":"E:\\vuepress-vdoing-blog\\node_modules\\vuepress-theme-vdoing\\util\\postData.js","mtime":1642945472267},{"path":"E:\\vuepress-vdoing-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1640456693969},{"path":"E:\\vuepress-vdoing-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":1640456693110}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNvcnQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuc3RpY2t5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0IHsgdHlwZSwgY29tcGFyZURhdGUgfSBmcm9tICcuL2luZGV4JzsKLyoqCiAqIOi/h+a7pOmdnuaWh+eroOmhtQogKiBAcGFyYW0ge0FycmF5fSBwb3N0cyDmiYDmnInmlofnq6DmlbDmja4KICovCgpleHBvcnQgZnVuY3Rpb24gZmlsdGVyUG9zdHMocG9zdHMpIHsKICBwb3N0cyA9IHBvc3RzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgdmFyIF9pdGVtJGZyb250bWF0dGVyID0gaXRlbS5mcm9udG1hdHRlciwKICAgICAgICBwYWdlQ29tcG9uZW50ID0gX2l0ZW0kZnJvbnRtYXR0ZXIucGFnZUNvbXBvbmVudCwKICAgICAgICBhcnRpY2xlID0gX2l0ZW0kZnJvbnRtYXR0ZXIuYXJ0aWNsZSwKICAgICAgICBob21lID0gX2l0ZW0kZnJvbnRtYXR0ZXIuaG9tZTsKICAgIHJldHVybiAhKHBhZ2VDb21wb25lbnQgfHwgYXJ0aWNsZSA9PT0gZmFsc2UgfHwgaG9tZSA9PT0gdHJ1ZSk7IC8vIOWtmOWcqOmhtemdoue7hOS7tuOAgWFydGljbGXlrZfmrrXkuLpmYWxzZe+8jOS7peWPiummlumhtQogIH0pOwogIHJldHVybiBwb3N0czsKfQovKioKICog5oyJ572u6aG25ZKM5pe26Ze05o6S5bqPCiAqIEBwYXJhbSB7QXJyYXl9IHBvc3RzIOi/h+a7pOmdnuaWh+eroOmhteS5i+WQjueahOaWh+eroOaVsOaNrgogKi8KCmV4cG9ydCBmdW5jdGlvbiBzb3J0UG9zdHMocG9zdHMpIHsKICBwb3N0cy5zb3J0KGZ1bmN0aW9uIChwcmV2LCBuZXh0KSB7CiAgICB2YXIgcHJldlN0aWNreSA9IHByZXYuZnJvbnRtYXR0ZXIuc3RpY2t5OwogICAgdmFyIG5leHRTdGlja3kgPSBuZXh0LmZyb250bWF0dGVyLnN0aWNreTsKCiAgICBpZiAocHJldlN0aWNreSAmJiBuZXh0U3RpY2t5KSB7CiAgICAgIHJldHVybiBwcmV2U3RpY2t5ID09IG5leHRTdGlja3kgPyBjb21wYXJlRGF0ZShwcmV2LCBuZXh0KSA6IHByZXZTdGlja3kgLSBuZXh0U3RpY2t5OwogICAgfSBlbHNlIGlmIChwcmV2U3RpY2t5ICYmICFuZXh0U3RpY2t5KSB7CiAgICAgIHJldHVybiAtMTsKICAgIH0gZWxzZSBpZiAoIXByZXZTdGlja3kgJiYgbmV4dFN0aWNreSkgewogICAgICByZXR1cm4gMTsKICAgIH0KCiAgICByZXR1cm4gY29tcGFyZURhdGUocHJldiwgbmV4dCk7CiAgfSk7CiAgcmV0dXJuIHBvc3RzOwp9Ci8qKgogKiDmjInml7bpl7TmjpLluo8KICogQHBhcmFtIHtBcnJheX0gcG9zdHMg6L+H5ruk6Z2e5paH56ug6aG15LmL5ZCO55qE5paH56ug5pWw5o2uCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIHNvcnRQb3N0c0J5RGF0ZShwb3N0cykgewogIHBvc3RzLnNvcnQoZnVuY3Rpb24gKHByZXYsIG5leHQpIHsKICAgIHJldHVybiBjb21wYXJlRGF0ZShwcmV2LCBuZXh0KTsKICB9KTsKICByZXR1cm4gcG9zdHM7Cn0KLyoqCiAqIOaMieWIhuexu+WSjOagh+etvuWIhue7hAogKiBAcGFyYW0ge0FycmF5fSBwb3N0cyDmjInml7bpl7TmjpLluo/kuYvlkI7nmoTmlofnq6DmlbDmja4KICovCgpleHBvcnQgZnVuY3Rpb24gZ3JvdXBQb3N0cyhwb3N0cykgewogIHZhciBjYXRlZ29yaWVzT2JqID0ge307CiAgdmFyIHRhZ3NPYmogPSB7fTsKCiAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoaSwgcG9zdHNMKSB7CiAgICB2YXIgX3Bvc3RzJGkkZnJvbnRtYXR0ZXIgPSBwb3N0c1tpXS5mcm9udG1hdHRlciwKICAgICAgICBjYXRlZ29yaWVzID0gX3Bvc3RzJGkkZnJvbnRtYXR0ZXIuY2F0ZWdvcmllcywKICAgICAgICB0YWdzID0gX3Bvc3RzJGkkZnJvbnRtYXR0ZXIudGFnczsKCiAgICBpZiAodHlwZShjYXRlZ29yaWVzKSA9PT0gJ2FycmF5JykgewogICAgICBjYXRlZ29yaWVzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbSkgewogICAgICAgICAgLy8g5YiG57G75YC85piv5pyJ5pWI55qECiAgICAgICAgICBpZiAoIWNhdGVnb3JpZXNPYmpbaXRlbV0pIHsKICAgICAgICAgICAgY2F0ZWdvcmllc09ialtpdGVtXSA9IFtdOwogICAgICAgICAgfQoKICAgICAgICAgIGNhdGVnb3JpZXNPYmpbaXRlbV0ucHVzaChwb3N0c1tpXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KCiAgICBpZiAodHlwZSh0YWdzKSA9PT0gJ2FycmF5JykgewogICAgICB0YWdzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbSkgewogICAgICAgICAgLy8g5qCH562+5YC85piv5pyJ5pWI55qECiAgICAgICAgICBpZiAoIXRhZ3NPYmpbaXRlbV0pIHsKICAgICAgICAgICAgdGFnc09ialtpdGVtXSA9IFtdOwogICAgICAgICAgfQoKICAgICAgICAgIHRhZ3NPYmpbaXRlbV0ucHVzaChwb3N0c1tpXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9OwoKICBmb3IgKHZhciBpID0gMCwgcG9zdHNMID0gcG9zdHMubGVuZ3RoOyBpIDwgcG9zdHNMOyBpKyspIHsKICAgIF9sb29wKGksIHBvc3RzTCk7CiAgfQoKICByZXR1cm4gewogICAgY2F0ZWdvcmllczogY2F0ZWdvcmllc09iaiwKICAgIHRhZ3M6IHRhZ3NPYmoKICB9Owp9Ci8qKgogKiDojrflj5bmiYDmnInliIbnsbvlkozmoIfnrb4KICogQHBhcmFtIHtPYmplY3R9IGdyb3VwUG9zdHMg5oyJ5YiG57G75ZKM5qCH562+5YiG57uE5LmL5ZCO55qE5paH56ug5pWw5o2uCiAqLwoKZXhwb3J0IGZ1bmN0aW9uIGNhdGVnb3JpZXNBbmRUYWdzKGdyb3VwUG9zdHMpIHsKICB2YXIgY2F0ZWdvcmllc0FyciA9IFtdOwogIHZhciB0YWdzQXJyID0gW107CgogIGZvciAodmFyIGtleSBpbiBncm91cFBvc3RzLmNhdGVnb3JpZXMpIHsKICAgIGNhdGVnb3JpZXNBcnIucHVzaCh7CiAgICAgIGtleToga2V5LAogICAgICBsZW5ndGg6IGdyb3VwUG9zdHMuY2F0ZWdvcmllc1trZXldLmxlbmd0aAogICAgfSk7CiAgfQoKICBmb3IgKHZhciBfa2V5IGluIGdyb3VwUG9zdHMudGFncykgewogICAgdGFnc0Fyci5wdXNoKHsKICAgICAga2V5OiBfa2V5LAogICAgICBsZW5ndGg6IGdyb3VwUG9zdHMudGFnc1tfa2V5XS5sZW5ndGgKICAgIH0pOwogIH0KCiAgcmV0dXJuIHsKICAgIGNhdGVnb3JpZXM6IGNhdGVnb3JpZXNBcnIsCiAgICB0YWdzOiB0YWdzQXJyCiAgfTsKfQ=="},{"version":3,"sources":["E:/vuepress-vdoing-blog/node_modules/vuepress-theme-vdoing/util/postData.js"],"names":["type","compareDate","filterPosts","posts","filter","item","frontmatter","pageComponent","article","home","sortPosts","sort","prev","next","prevSticky","sticky","nextSticky","sortPostsByDate","groupPosts","categoriesObj","tagsObj","i","postsL","categories","tags","forEach","push","length","categoriesAndTags","categoriesArr","tagsArr","key"],"mappings":"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","sourcesContent":["import { type, compareDate } from './index'\n\n/**\n * 过滤非文章页\n * @param {Array} posts 所有文章数据\n */\nexport function filterPosts (posts) {\n  posts = posts.filter(item => {\n    const { frontmatter: { pageComponent, article, home } } = item\n    return !(pageComponent || article === false || home === true) // 存在页面组件、article字段为false，以及首页\n  })\n  return posts\n}\n\n/**\n * 按置顶和时间排序\n * @param {Array} posts 过滤非文章页之后的文章数据\n */\nexport function sortPosts (posts) {\n  posts.sort((prev, next) => {\n    const prevSticky = prev.frontmatter.sticky\n    const nextSticky = next.frontmatter.sticky\n    if (prevSticky && nextSticky) {\n      return prevSticky == nextSticky ? compareDate(prev, next) : (prevSticky - nextSticky)\n    } else if (prevSticky && !nextSticky) {\n      return -1\n    } else if (!prevSticky && nextSticky) {\n      return 1\n    }\n    return compareDate(prev, next)\n  })\n  return posts\n}\n\n/**\n * 按时间排序\n * @param {Array} posts 过滤非文章页之后的文章数据\n */\nexport function sortPostsByDate (posts) {\n  posts.sort((prev, next) => {\n    return compareDate(prev, next)\n  })\n  return posts\n}\n\n/**\n * 按分类和标签分组\n * @param {Array} posts 按时间排序之后的文章数据\n */\nexport function groupPosts (posts) {\n  const categoriesObj = {}\n  const tagsObj = {}\n\n  for (let i = 0, postsL = posts.length; i < postsL; i++) {\n    const { frontmatter: { categories, tags } } = posts[i]\n    if (type(categories) === 'array') {\n      categories.forEach(item => {\n        if (item) { // 分类值是有效的\n          if (!categoriesObj[item]) {\n            categoriesObj[item] = []\n          }\n          categoriesObj[item].push(posts[i])\n        }\n      })\n    }\n    if (type(tags) === 'array') {\n      tags.forEach(item => {\n        if (item) { // 标签值是有效的\n          if (!tagsObj[item]) {\n            tagsObj[item] = []\n          }\n          tagsObj[item].push(posts[i])\n        }\n      })\n    }\n  }\n  return {\n    categories: categoriesObj,\n    tags: tagsObj\n  }\n}\n\n/**\n * 获取所有分类和标签\n * @param {Object} groupPosts 按分类和标签分组之后的文章数据\n */\nexport function categoriesAndTags (groupPosts) {\n  const categoriesArr = []\n  const tagsArr = []\n\n  for (let key in groupPosts.categories) {\n    categoriesArr.push({\n      key,\n      length: groupPosts.categories[key].length\n    })\n  }\n\n  for (let key in groupPosts.tags) {\n    tagsArr.push({\n      key,\n      length: groupPosts.tags[key].length\n    })\n  }\n  return {\n    categories: categoriesArr,\n    tags: tagsArr\n  }\n}\n"]}]}